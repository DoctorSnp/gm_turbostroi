cmake_minimum_required(VERSION 3.10)
set(PROJECT_NAME gmsv_turbostroi)
project(${PROJECT_NAME} CXX)

set(CMAKE_CXX_FLAGS "-m32 -fPIC")
set(CMAKE_CXX_STANDARD 17)

if(UNIX)
    set(SUFFIX _linux)
    add_definitions(-DPOSIX -DGNUC -D_LINUX)
elseif(WIN32)
    set(SUFFIX _win32)
endif()

file(GLOB_RECURSE SRC_FILES gmsv_turbostroi_win32.cpp)
add_library(${PROJECT_NAME} SHARED ${SRC_FILES})
set_target_properties(${PROJECT_NAME} PROPERTIES PREFIX "")
set_target_properties(${PROJECT_NAME} PROPERTIES OUTPUT_NAME "${PROJECT_NAME}${SUFFIX}")
set_target_properties(${PROJECT_NAME} PROPERTIES SUFFIX ".dll")
set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS "-m32" LINK_FLAGS "-m32 -z defs -lpthread" )

target_include_directories(${PROJECT_NAME} PRIVATE external/sourcesdk-minimal/common)
target_include_directories(${PROJECT_NAME} PRIVATE external/metamod-source/core/sourcehook)
target_include_directories(${PROJECT_NAME} PRIVATE external/garrysmod/include)
target_include_directories(${PROJECT_NAME} PRIVATE external/luajit)
target_include_directories(${PROJECT_NAME} PRIVATE external/sourcesdk-minimal/public)
target_include_directories(${PROJECT_NAME} PRIVATE external/sourcesdk-minimal/game/server)
target_include_directories(${PROJECT_NAME} PRIVATE external/sourcesdk-minimal/game/shared)
target_include_directories(${PROJECT_NAME} PRIVATE external/sourcesdk-minimal/public/tier0)
target_include_directories(${PROJECT_NAME} PRIVATE external/sourcesdk-minimal/public/tier1)
target_include_directories(${PROJECT_NAME} PRIVATE external/sourcesdk-minimal/public/tier2)
target_include_directories(${PROJECT_NAME} PRIVATE external/sourcesdk-minimal/public/tier3)
target_include_directories(${PROJECT_NAME} PRIVATE external/sourcesdk-minimal/public/mathlib)
target_include_directories(${PROJECT_NAME} PRIVATE external/sourcesdk-minimal/raytrace)
target_include_directories(${PROJECT_NAME} PRIVATE external/sourcesdk-minimal/public/steam)
target_include_directories(${PROJECT_NAME} PRIVATE external/sourcesdk/lib/public)
target_include_directories(${PROJECT_NAME} PRIVATE external/sourcesdk-minimal/lib/public)
target_include_directories(${PROJECT_NAME} PRIVATE external/sourcesdk-minimal/lib/common)
target_link_libraries(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/external/libsourcehook.a)
target_link_libraries(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/external/luajit/libluajit.a)
target_link_libraries(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/external/sourcesdk/lib/public/linux32/mathlib.a)
target_link_libraries(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/external/sourcesdk/lib/public/linux32/raytrace.a)
target_link_libraries(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/external/sourcesdk/lib/public/linux32/tier1.a)
target_link_libraries(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/external/sourcesdk-minimal/lib/common/linux32/libcrypto.a)
target_link_libraries(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/external/sourcesdk-minimal/lib/common/linux32/libcurl.a)
target_link_libraries(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/external/sourcesdk-minimal/lib/common/linux32/libcurlssl.a)
target_link_libraries(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/external/sourcesdk-minimal/lib/common/linux32/libssl.a)
target_link_libraries(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/external/sourcesdk-minimal/lib/public/linux32/libz.a)
target_link_libraries(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/external/sourcesdk-minimal/lib/public/linux32/tier2.a)
target_link_libraries(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/external/sourcesdk-minimal/lib/public/linux32/tier3.a)
target_link_libraries(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/external/boost/libboost_atomic.a)
target_link_libraries(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/external/boost/libboost_chrono.a)
target_link_libraries(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/external/boost/libboost_date_time.a)
target_link_libraries(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/external/boost/libboost_thread.a)
target_link_libraries(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/external/sourcesdk-minimal/lib/public/linux32/libsteam_api.so)
target_link_libraries(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/external/sourcesdk-minimal/lib/public/linux32/libtier0.so)
target_link_libraries(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/external/sourcesdk-minimal/lib/public/linux32/libtier0_srv.so)
target_link_libraries(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/external/sourcesdk-minimal/lib/public/linux32/libvstdlib.so)
target_link_libraries(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/external/sourcesdk-minimal/lib/public/linux32/libvstdlib_srv.so)
